<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rlis.generator.mapper.RlGenTableMapper">

	<resultMap type="RlGenTable" id="RlGenTableResult">
	    <id     property="tableId"        column="table_id"          />
		<result property="tableName"      column="table_name"        />
		<result property="tableComment"   column="table_comment"     />
		<result property="subTableName"   column="sub_table_name"    />
		<result property="subTableFkName" column="sub_table_fk_name" />
		<result property="className"      column="class_name"        />
		<result property="tplCategory"    column="tpl_category"      />
		<result property="packageName"    column="package_name"      />
		<result property="moduleName"     column="module_name"       />
		<result property="businessName"   column="business_name"     />
		<result property="functionName"   column="function_name"     />
		<result property="functionAuthor" column="function_author"   />
		<result property="options"        column="options"           />
		<result property="createBy"       column="create_by"         />
		<result property="createTime"     column="create_time"       />
		<result property="updateBy"       column="update_by"         />
		<result property="updateTime"     column="update_time"       />
		<result property="remark"         column="remark"            />
		<collection property="columns" javaType="java.util.List" resultMap="RlGenTableColumnResult" />
	</resultMap>
	
	<resultMap type="RlGenTableColumn" id="RlGenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
        <result property="isInsert"       column="is_insert"      />
        <result property="isEdit"         column="is_edit"        />
        <result property="isList"         column="is_list"        />
        <result property="isQuery"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateTime"     column="update_time"    />
    </resultMap>
	
	<sql id="selectGenTableVo">
        select table_id, table_name, table_comment, sub_table_name, sub_table_fk_name, class_name, tpl_category, package_name, module_name, business_name, function_name, function_author, options, create_by, create_time, update_by, update_time, remark from rl_gen_table
    </sql>
    
    <select id="selectGenTableList" parameterType="RlGenTable" resultMap="RlGenTableResult">
		<include refid="selectGenTableVo"/>
		<where>
			<if test="tableName != null and tableName != ''">
				AND lower(table_name) like lower(concat('%', #{tableName}, '%'))
			</if>
			<if test="tableComment != null and tableComment != ''">
				AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))
			</if>
		</where>
	</select>

	<select id="selectDbTableList" parameterType="RlGenTable" resultMap="RlGenTableResult">
		SELECT a.TABLE_NAME    as table_name,
		b.COMMENTS      as table_comment,
		c.CREATED       as create_time,
		c.LAST_DDL_TIME as update_time
		FROM user_tables a, user_tab_comments b, dba_objects c
		WHERE a.TABLE_NAME = b.TABLE_NAME
		and c.OBJECT_NAME = b.table_name
		AND a.table_name LIKE 'RL_%'
		AND a.table_name NOT LIKE 'RL_GEN_%'
		<if test="tableName != null and tableName != ''">
			AND lower(a.table_name) like lower(concat('%', #{tableName}, '%'))
		</if>
		<if test="tableComment != null and tableComment != ''">
			AND lower(b.table_comment) like lower(concat('%', #{tableComment}, '%'))
		</if>
	</select>
	
	<select id="selectDbTableListByNames" resultMap="RlGenTableResult">
		SELECT a.TABLE_NAME    as table_name,
		b.COMMENTS      as table_comment,
		c.CREATED       as create_time,
		c.LAST_DDL_TIME as update_time
		FROM user_tables a, user_tab_comments b, dba_objects c
		WHERE a.TABLE_NAME = b.TABLE_NAME
		and c.OBJECT_NAME = b.table_name
		AND a.table_name LIKE 'RL_%'
		AND a.table_name NOT LIKE 'RL_GEN_%'
		and a.table_name in
	    <foreach collection="array" item="name" open="(" separator="," close=")">
 			#{name}
        </foreach> 
	</select>
	
	<select id="selectTableByName" parameterType="String" resultMap="RlGenTableResult">
		SELECT a.TABLE_NAME    as table_name,
			   b.COMMENTS      as table_comment,
			   c.CREATED       as create_time,
			   c.LAST_DDL_TIME as update_time
		FROM user_tables a, user_tab_comments b, dba_objects c
		WHERE a.TABLE_NAME = b.TABLE_NAME
		  and c.OBJECT_NAME = b.table_name
		  and b.table_comment <![CDATA[ <> ]]> ''
		  and a.table_name = #{tableName}
	</select>
	
	<select id="selectGenTableById" parameterType="Long" resultMap="RlGenTableResult">
	    SELECT t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.options, t.remark,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM rl_gen_table t
			 LEFT JOIN rl_gen_table_column c ON t.table_id = c.table_id
		where t.table_id = #{tableId} order by c.sort
	</select>
	
	<select id="selectGenTableByName" parameterType="String" resultMap="RlGenTableResult">
	    SELECT t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.options, t.remark,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM rl_gen_table t
			 LEFT JOIN rl_gen_table_column c ON t.table_id = c.table_id
		where t.table_name = #{tableName} order by c.sort
	</select>
	
	<select id="selectGenTableAll" parameterType="String" resultMap="RlGenTableResult">
	    SELECT t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.options, t.remark,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM rl_gen_table t
			 LEFT JOIN rl_gen_table_column c ON t.table_id = c.table_id
		order by c.sort
	</select>
	
	<insert id="insertGenTable" parameterType="RlGenTable">
		<selectKey resultType="long" keyProperty="tableId" order="BEFORE">
			select seq_rl_gen_table.nextval id from dual
		</selectKey>
        insert into rl_gen_table (
                          table_id,
			<if test="tableName != null">table_name,</if>
			<if test="tableComment != null and tableComment != ''">table_comment,</if>
			<if test="className != null and className != ''">class_name,</if>
			<if test="tplCategory != null and tplCategory != ''">tpl_category,</if>
			<if test="packageName != null and packageName != ''">package_name,</if>
			<if test="moduleName != null and moduleName != ''">module_name,</if>
			<if test="businessName != null and businessName != ''">business_name,</if>
			<if test="functionName != null and functionName != ''">function_name,</if>
			<if test="functionAuthor != null and functionAuthor != ''">function_author,</if>
			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
			create_time
         )values(
			#{tableId,jdbcType=LONGVARBINARY},
			<if test="tableName != null">#{tableName},</if>
			<if test="tableComment != null and tableComment != ''">#{tableComment},</if>
			<if test="className != null and className != ''">#{className},</if>
			<if test="tplCategory != null and tplCategory != ''">#{tplCategory},</if>
			<if test="packageName != null and packageName != ''">#{packageName},</if>
			<if test="moduleName != null and moduleName != ''">#{moduleName},</if>
			<if test="businessName != null and businessName != ''">#{businessName},</if>
			<if test="functionName != null and functionName != ''">#{functionName},</if>
			<if test="functionAuthor != null and functionAuthor != ''">#{functionAuthor},</if>
			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
			sysdate
         )
    </insert>
    
    <update id="updateGenTable" parameterType="RlGenTable">
        update rl_gen_table
        <set>
            <if test="tableName != null">table_name = #{tableName},</if>
            <if test="tableComment != null and tableComment != ''">table_comment = #{tableComment},</if>
            <if test="subTableName != null and subTableName != ''">sub_table_name = #{subTableName},</if>
            <if test="subTableFkName != null and subTableFkName != ''">sub_table_fk_name = #{subTableFkName},</if>
            <if test="className != null and className != ''">class_name = #{className},</if>
            <if test="functionAuthor != null and functionAuthor != ''">function_author = #{functionAuthor},</if>
            <if test="tplCategory != null and tplCategory != ''">tpl_category = #{tplCategory},</if>
            <if test="packageName != null and packageName != ''">package_name = #{packageName},</if>
            <if test="moduleName != null and moduleName != ''">module_name = #{moduleName},</if>
            <if test="businessName != null and businessName != ''">business_name = #{businessName},</if>
            <if test="functionName != null and functionName != ''">function_name = #{functionName},</if>
            <if test="options != null and options != ''">options = #{options},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate
        </set>
        where table_id = #{tableId}
    </update>
    
    <delete id="deleteGenTableByIds" parameterType="Long">
        delete from rl_gen_table where table_id in 
        <foreach collection="array" item="tableId" open="(" separator="," close=")">
            #{tableId}
        </foreach>
    </delete>

</mapper> 